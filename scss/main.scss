// ============================= PRIMARY SASS FILE =============================

// IMPORT MODULAR FRAGMENT FILES -----------------------------------------------

// no underscore or extension in filename
// could be kept in "partials" folder; eg: @import "partials/config"
// see http://thesassway.com/beginner/how-to-structure-a-sass-project

@import "config";
@import "menu";  // must load after "config"
// @import "mobile" at the bottom, must load after regular css

// FOR ALL PAGES ---------------------------------------------------------------

* {
  box-sizing: border-box;
}

body {
  @include background;  // use "background" mixin (_config.scss)
  background: $primary-color;  // variable (_config.scss)
  color: set-text-color($primary-color);  // use "set-text-color" function (_config.scss)
  height: 100%;
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

h1,
h2,
h3 {  // default settings, can vary for other pages [see L126, L213]
  margin: 0;
  font-weight: 400;  // {why same font-weight for all headings?}

  &.lg-heading {  // h1.lg-heading: title
    font-size: 6rem;  // 1rem = default font-size of root element (usually 16px, so 6rem = 96px); sets font-size relative to BROWSER'S default font-size (will NOT inherit from its parents); responsive, so best for creating perfectly scalable layout
  }

  &.sm-heading {  // h1.sm-heading: byline
    margin-bottom: 2rem;
    padding: 0.2rem 1rem;
    background: rgba(lighten($primary-color, 10), 0.5);  // adds 10% to $color's HSL lightness value (can be negative): so #444444 becomes #5d5d5d; rgba(color, 0.5): opacity 50%
  }
}

a {
  color: #fff;
  text-decoration: none;
}

header {
  position: fixed;
  z-index: 2;  // higher z-index (stack order): closer to viewer
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

main {
  padding: 4rem;  // so 4x16px = 64px space btw border & content (default value)
  // height: 100%;
  min-height: calc(100vh - 60px);  // by expanding "main" (the element above "footer") to entire viewport height less footer height (60px), footer is always pushed to bottom of page, creating a "sticky" footer

  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;

      &:hover {
        color: $secondary-color;
        @include easeOut;  // use "easeOut" mixin (_config.scss)
      }
    }
  }

  &#home {
    overflow: hidden;  // no scrollbars
    h1 {
      margin-top: 20vh;  // vh: viewport height
    }
  }
}

// FOR about.html --------------------------------------------------------------

.about-info {
  display: grid;
  grid-gap: 30px;
  grid-template-areas:
    "bioimage bio bio"
    "job1 job2 job3";  // 3fr (fractional) across; each "grid-area" named below; stretch "bio" over 2fr
  grid-template-columns: repeat(3, 1fr);  // {easier to just write: "1fr 1fr 1fr"?}

  .bio-image {
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }

  .bio {
    grid-area: bio;
    font-size: 1.25rem;
  }

  .job-1 {
    grid-area: job1;
  }

  .job-2 {
    grid-area: job2;
  }

  .job-3 {
    grid-area: job3;
  }

  .job {
    background: lighten($primary-color, 10);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;

    & h2 {  // select <h2> within <div class="job"> {my+}
      color: $secondary-color;  // make heading color distinctive
    }

    // & h5 {  // select <h5> within <div class="job"> {my+}
    //   font-size: 1rem;  // make sub-heading larger
    // }
  }

}

// FOR work.html ---------------------------------------------------------------

.projects {
  display: grid;
  grid-template-columns: repeat(3, 1fr);  // default (see _mobile.scss)
  grid-gap: 0.7rem;

  img {
    width: 100%;  // 100% element (grid fr) width, but element resizes responsively w browser window
    border: 3px #fff solid;

    &:hover {
      opacity: 0.5;
      border-color: $secondary-color;
      @include easeOut;  // use "easeOut" mixin (_config.scss)
    }
  }
}

// Buttons

.btn {  // no class="btn"; will extend class to "btn-light" & "btn-dark" (these inherit fr class="btn")
  display: block;
  margin-bottom: 0.3rem;
  border: 0;
  padding: 0.5rem 1rem;

  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color);
  }
}

.btn-dark {
  @extend .btn;  // inherit properties from .btn
  background: darken($primary-color, 50);
  color: #fff;
}

.btn-light {
  @extend .btn;
  background: lighten($primary-color, 50);
  color: #333;
}

// FOR contact.html ------------------------------------------------------------

.boxes {
  display: flex;  // expands items to fill available free space or shrinks them to prevent overflow
  flex-wrap: wrap;   // items can be wrapped onto multiple lines
  justify-content: space-evenly;  // spacing between two adjacent items is the same
  align-items: center;
  margin-top: 1rem;

  div {
    font-size: 2rem;
    border: 3px #fff solid;
    padding: 1.5rem 2.5rem;
    margin-bottom: 3rem;
    @include easeOut;  // use "easeOut" mixin (_config.scss)

    &:hover {  // {this looks cool!}
      padding: 0.5rem 1.5rem;  // shrinks fr "1.5rem 2.5rem"
      background: $secondary-color;  // switch background color
      color: set-text-color($secondary-color);  // switch font color based on background color
      span {  // changes color of the label (eg "Email:")
        color: set-text-color($secondary-color);
      }
    }
  }
}

// OTHER -----------------------------------------------------------------------

// {myâˆ†: h1 otherwise looks too big in "secondary" pages}
#about,
#work,
#contact {
  & h1 {
    font-size: 4rem;
  }
}

#main-footer {
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color ($primary-color);
  height: 60px;
}

@import "mobile";  // media queries must be at bottom bc shd run after initial css {better to name it "responsive"?}
