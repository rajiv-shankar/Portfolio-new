// VARIABLES -------------------------------------------------------------------
// values can be easily changed to alter look without chaging rest of css

$primary-color: #444;
$secondary-color: #eece1a;
$show-home-image: true;  // default
$home-image: url(../img/background.jpg);
$background-opacity: 0.5;

// MIXINS ----------------------------------------------------------------------
// code block to reuse throughout the site
// or: class w methods for use by other classes wo it being parent class of those classes

@mixin background {
  @if $show-home-image {  // if $show-home-image = true (default, see L5), then:
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;  // img position fixed within viewport (dn scroll with containing block)
      background-size: cover;  // resize img to cover entire container (may have to stretch img or cut part off one edge)

      // Overlay (transparent film over background)
      &:after {  // pseudo-element, instead of <div class="overlay"> in index.html/L24
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;  // lower z-index > closer to viewer
        background: rgba($primary-color, $background-opacity);
      }
    }
  }
}

// Text color
@function set-text-color($color) {
  @if (lightness($color) > 40) {
    @return #000;
  } @else {
    @return #fff;
  }
}

@mixin easeOut {
  transition: all 0.5s ease-out;
}




// Media query mixins
@mixin mediaSmall {  // Smartphones
  @media screen and (max-width: 500px) {
    @content;
  }
}
@mixin mediaMedium {  // Tablets & Small Laptops
  @media screen and (max-width: 768px) {
    @content;
  }
}
@mixin mediaLarge {  // Desktops & Laptops
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}
@mixin mediaXlarge {  // Widescreens
  @media screen and (min-width: 1171px) {
    @content;
  }
}
