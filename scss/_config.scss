// VARIABLES -------------------------------------------------------------------
// values can be changed easily to alter look without searching & making multiple changes

$primary-color: #444;
$secondary-color: #eece1a;
$show-home-image: true;  // default
$home-image: url(../img/background.jpg);
$background-opacity: 0.5;

// MIXINS ----------------------------------------------------------------------
// code block (groups of CSS declarations) for reuse throughout the site
// or: class w methods for use by other classes wo it being parent class of those classes

@mixin background {
  @if $show-home-image {  // if $show-home-image = true (default, see L5), then:
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;  // img position fixed within viewport (dn scroll with containing block)
      background-size: cover;  // resize img to cover entire container (may have to stretch img or cut part off one edge)

      // Overlay (transparent film over background)
      &:after {  // pseudo-element, instead of <div class="overlay"> in index.html/L24
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;  // lower z-index (stack order): further fr viewer
        background: rgba($primary-color, $background-opacity);
      }
    }
  }
}

// Switch font color
@function set-text-color($color) {
  @if (lightness($color) > 40) {
    @return #000;  // black
  } @else {
    @return #fff;  // white
  }
}

@mixin easeOut {
  transition: all 0.5s ease-out;
}

// Media query mixins
// {why have this, as each only used once (in _mobile.scss)? }

@mixin mediaSmall {  // Smartphones
  @media screen and (max-width: 500px) {  // @media: query to check for different media types/devices (print v screen, screen resolution, browser viewport width &c) for applying different styles &c
    @content;  // directive to pass content block into a mixin: @include mediaSmall {...} (see _mobile.scss)
  }
}
@mixin mediaMedium {  // Tablets & Small Laptops
  @media screen and (max-width: 768px) {
    @content;
  }
}
@mixin mediaLarge {  // Desktops & Laptops
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}
@mixin mediaXlarge {  // Widescreens
  @media screen and (min-width: 1171px) {
    @content;
  }
}
